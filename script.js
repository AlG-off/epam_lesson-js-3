/*Ко всем заданиям
1)	Следует сделать страницу, на которой можно смотреть, как работают функции.
2)	Вывод должен осуществляться корректно, независимо от введённых данных.
3)	Неотловленные исключения на странице недопустимы.
4)	Всё должно работать в ES5.
*/
var btnOne = document.getElementById('lesson-one-btn'),
	btnTwo = document.getElementById('lesson-two-btn'),
	inputOne = document.getElementById('lesson-one-input'),
	inputTwo = document.getElementById('lesson-two-input'),
	outputOne = document.getElementById('lesson-one-return'),
	outputTwo = document.getElementById('lesson-two-return');

btnOne.addEventListener('click', function() {
	outputOne.innerHTML = calcStr(inputOne.value);
});
btnTwo.addEventListener('click', function() {
	outputTwo.innerHTML = delRepeatSymbol(inputTwo.value);
});
/*
1.Написать функцию для подсчета результата выражения. На вход приходит строка с выражением. 
Внутри выражения записываются вещественные числа (с точкой в качестве разделителя целой и дробной части), 
разделенные математическими операторами (+*-/). Между числом и оператором могут быть любые символы, 
кроме цифр и точек. В конце строки стоит знак «равно». Результат выражения вычисляется последовательно.
Приоритет операций не учитывается. Результат выводить с точностью до 2 знаков после запятой.
Примечания:
1)	Для вычисления нельзя пользоваться функцией eval. 
2)	Не следует разбирать строку вручную, надо использовать регулярные выражения.
3)	Вычисление должно работать корректно на корректных строках, а именно:
a.	С единственным знаком равенства
b.	Без лишних операторов и цифр
4)	Дополнительный плюс за поддержку унарных операторов перед числами.*/

function calcStr(str) {
	var arr, result,
		err = "Ошибка ввода: Некорректная строка!";

	str = str.replace(/[^-+*/.\d=]/g, '').replace(/(\d-)+?/g, "$1 ");//Оставим в строке только числа и операторы
	
	if(!str.length) return err;//Проверяем на пустую строку

	arr = str.match(/(-?\d+(\.\d+)?|[-+/*])(?=.*=)/g);/*Выбираем отрицательные/положительные целые или дробные числа, 
	или оператор. Возращаем массив из всех совпадений*/

	if(!arr) return err; //если совпадений не было,то match возвращает null. Проверяем на наличие совпадений
	
	result = +arr[0];
	for(var i=0; (2*i+1) < arr.length; i++) {
		
		try{//Отлавливаем ошибку, если были введены некорректные данные
			//Последовательно вычисляем выражение из строки
			result = getCalc(result, arr[2*i+1], +arr[(i+1)*2]);
			if(isNaN(result)) throw new SyntaxError("Ошибка в вычислении");
		}catch(e){
			console.log(e.name + ': ' + e.message);
			return err;
		}
	}

	return result.toFixed(2);

	function getCalc(a, operator, b) {
		switch(operator) {
			case "+": a += b;
			break;
			case "-": a -= b;
			break;
			case "*": a *= b;
			break;
			case "/": a /= b;
			break;
		}
		return a;
	}
};

/*
2.Написать функцию, убирающую из строки встречающиеся во всех словах символы.
На вход приходит строка из слов. Слова разделяются пробельными символами и знаками пунктуации (.?,;:!).
Результатом является строка, из которой удалены символы, присутствующие в каждом слове. Регистр не учитывается.
Примечания
1)	Должны обрабатываться строки, содержащие любые символы.
2)	Должно корректно работать на пустой строке, строке без слов и строке из одного слова.
3)	Все разделители должны сохраниться.*/

function delRepeatSymbol(str) {
	var	arr = str.match(/[^\s.?,;:!=]+/gi);//Разбиваем строку на отдельные слова

	if(!arr) return str;//Т.к в случае, если совпадений не было, match возвращает null, то проверяем на наличие совпадений

	var	start = arr[0],
		state = false,
		regexp;

	for(var i = 0; i < start.length; i++){//Берем символ из первого слова
		for(var j = 1; j < arr.length; j++){//и пробегаемся по всем словам
			if(!~arr[j].indexOf(start.charAt(i))) {//Если нет совпадения
				state = false;//возвращаем false
				break;// и прекращаем дальнейший поиск в словах
			}
			state = true;//вернем true, если символ присутствует в каждом слове
		};
		
		if(!state) continue;
		
		regexp = new RegExp(start.charAt(i), 'gi');
		str = str.replace(regexp,'');//Удаляем символ, присутствующий в каждом слове
	}
	return str;
};
